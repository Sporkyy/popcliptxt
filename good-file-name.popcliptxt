// #popclip
// name: Good File Name
// icon: circle filled GFN
// language: javascript

// MARK: Constants

const regexReplacements = [
  // Periods
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [/^\.+(.+?)/gi, '$1'], // Remove leading periods
  [/(.+?)\.+$/gi, '$1'], // Remove trailing periods
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  // Colons
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [/:{2,}/gi, ':'], // Normalize multiple colons to one
  [/\b:\s\b/gi, ' - '], // Replace grammatical colons with hyphens
  [/:/gi, ''], // Remove all other colons
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  // Parentheses/Brackets
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [/[\(\[]\s*/gi, ' ('], // Standardize opening
  [/\s*[\)\]]/gi, ') '], // Standardize closing
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [/\bS\s?(\d{1})\s?E\s?(\d{1})\b/gi, 's0$1e0$2'], // Season+Episode
  [/\bS\s?(\d{1})\s?E\s?(\d{2})\b/gi, 's0$1e$2'], // Season+Episode
  [/\bS\s?(\d{2})\s?E\s?(\d{1})\b/gi, 's$1e0$2'], // Season+Episode
  [/\bS\s?(\d{2})\s?E\s?(\d{2})\b/gi, 's$1e$2'], // Season+Episode
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  // Day Month Year
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [
    // 1970-2029
    /\b(0[1-9]|[12][0-9]|3[01])\D{,3}\b(0[1-9]|1[012])\D{,3}(19[789][0-9]|20[012][0-9])\b/gi,
    '$3-$2-$1',
  ],
  [
    // (19)30-(19)99
    /\b(0[1-9]|[12][0-9]|3[01])\D{,3}(0[1-9]|1[012])\D{,3}([3456789][0-9])\b/gi,
    '19$3-$2-$1',
  ],
  [
    // (20)00-(20)29
    /\b(0[1-9]|[12][0-9]|3[01])\D{,3}(0[1-9]|1[012])\D{,3}([012][0-9])\b/gi,
    '20$3-$2-$1',
  ],
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  // Month Day Year
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [
    // 1970-2029
    /\b(0[1-9]|1[012])\D{,3}(0[1-9]|[12][0-9]|3[01])\D{,3}(19[789][0-9]|20[012][0-9])\b/gi,
    '$3-$2-$1',
  ],
  [
    // (19)30-(19)99
    /\b(0[1-9]|1[012])\D{,3}(0[1-9]|[12][0-9]|3[01])\D{,3}([3456789][0-9])\b/gi,
    '19$3-$2-$1',
  ],
  [
    // (20)00-(20)29
    /\b(0[1-9]|1[012])\D{,3}(0[1-9]|[12][0-9]|3[01])\D{,3}([012][0-9])\b/gi,
    '20$3-$2-$1',
  ],
  [
    /\b(?:JAN(?:UARY)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-01-$1',
  ],
  [
    /\b(?:FEB(?:RUARY)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-02-$1',
  ],
  [
    /\b(?:MAR(?:CH)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-03-$1',
  ],
  [
    /\b(?:APR(?:IL)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-04-$1',
  ],
  [
    /\b(?:MAY)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-05-$1',
  ],
  [
    /\b(?:JUNE?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-06-$1',
  ],
  [
    /\b(?:JUL(?:ULY)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-07-$1',
  ],
  [
    /\b(?:AUG(?:UST)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-08-$1',
  ],
  [
    /\b(SEPT?(?:EMBER)?)\D{,3}(0?[1-9]|[12][0-9]|3[01]),?\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-09-$1',
  ],
  [
    /\b(?:OCT(?:OBER)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-10-$1',
  ],
  [
    /\b(?:NOV(?:EMBER)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-11-$1',
  ],
  [
    /\b(?:DEC(?:ECEMBER)?)\D{,3}(0?[1-9]|[12][0-9]|3[01])\D{,3}(199[0-9]|20[0-2][0-9])\b/gi,
    '$2-12-$1',
  ],
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

  // Year Month Day
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
  [
    // 1970-2029
    /\b(19[789][0-9]|20[012][0-9])\D{,3}(0[1-9]|1[012])\D{,3}(0[1-9]|[12][0-9]|3[01])\b/gi,
    '$1-$2-$3',
  ],
  [
    // (19)30-(19)99
    /\b([3456789][0-9])\D{,3}(0[1-9]|1[012])\D{,3}(0[1-9]|[12][0-9]|3[01])\b/gi,
    '19$1-$2-$3',
  ],
  [
    // (20)00-(20)29
    /\b([012][0-9])\D{,3}(0[1-9]|1[012])\D{,3}(0[1-9]|[12][0-9]|3[01])\b/gi,
    '20$1-$2-$3',
  ],
  [
    // (20)00-(20)29
    (/\b(\d{4})-(\d{2})-(\d{2})/gi, ' - $1-$2-$3 - '),
  ][
    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

    // ⬇️ This should probably always be penultimate
    // Underscores are changed to spaces by Jdownloader2, thus spaces
    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    (/[:\\\/]+/gi, ' ')
  ][
    // Remove all other slahes+colons
    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=

    // ⬇️ This should probably always be ultiate
    // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
    (/\s+/gi, ' ')
  ], // Normalize all whitespace to one space
  // =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
];

// MARK: Functions

function strToISO8601(date) {
  const d = new Date(date);
  return d.toISOString().split('T')[0];
}

// MARK: Main

let fn = popclip.input.text;

// Standardize certain strings
for (const [re, replacement] of regexReplacements) {
  fn = fn.replace(re, replacement);
}

// Remove any leading and trailing whitespace
fn = fn.trim();

popclip.copyText(fn);
