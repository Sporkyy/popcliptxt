// #popclip
// name: Fix File Name
// icon: square filled f.f
// language: javascript

const minorWords = [
  'a',
  'an',
  'and',
  'as',
  'at',
  'but',
  'by',
  'for',
  'if',
  'in',
  'nor',
  'of',
  'on',
  'or',
  'so',
  'the',
  'to',
  'up',
  'yet',
];

let input = popclip.input.text;
// let input = 'this.is.a.file.name.without.spaces.from.dj.Tieto.mkv';

// Only process file names witout spaces
if (input.includes(' ')) return;

const idxLastDot = input.lastIndexOf('.');

// Files don't need to have an extension
// But it's a good indication something is wrong if it doesn't
if (-1 === idxLastDot) return;

let ext = input.slice(idxLastDot + 1);
let stem = input.slice(0, idxLastDot);

const spaceCandidateCnts = [...stem].reduce(
  (acc, curr) => {
    if (acc.has(curr)) acc.set(curr, acc.get(curr) + 1);
    return acc;
  },
  new Map([
    ['.', 0],
    ['-', 0],
    ['_', 0],
  ]),
);

// console.log(spaceCandidateCnts);

// Sort the map by values in descending order
const sortedSpaceCandidateCnts = [
  ...new Map([...spaceCandidateCnts.entries()].sort((a, b) => b[1] - a[1])),
];

// console.log(sortedSpaceCandidateCnts);

// If no candidates are found, return
if (0 === sortedSpaceCandidateCnts[0][1]) return;

const spaceChar = sortedSpaceCandidateCnts[0][0];

stem = stem.replaceAll(spaceChar, ' ');

// Make Title Case
stem = stem
  .split(' ')
  .map((word, index, words) => {
    // Capitalize the first word,
    // the first word after a colon,
    // and all major words
    if (
      index === 0 ||
      words[index - 1].endsWith(':') ||
      !minorWords.includes(word.toLowerCase())
    ) {
      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();
    } else {
      return word.toLowerCase();
    }
  })
  .join(' ');

// Normalize whitespace
stem = stem.replace(/\s{2,}/g, ' ');

// Remove any leading and trailing whitespace
stem = stem.trim();

// Lowercase the extension
ext = ext.toLowerCase();

const output = `${stem}.${ext}`;

popclip.pasteText(output);
// console.log(output);
